#!/bin/bash

echo "üìä Iniciando monitoramento cont√≠nuo da escalabilidade..."

# Verificar se a aplica√ß√£o est√° rodando
if ! kubectl get pods -n aula-k8s -l app=php-apache | grep -q Running; then
    echo "‚ùå Aplica√ß√£o n√£o est√° rodando. Deploy primeiro a aplica√ß√£o."
    exit 1
fi

# Verificar se o HPA est√° configurado
if ! kubectl get hpa -n aula-k8s | grep -q php-apache; then
    echo "‚ùå HPA n√£o est√° configurado. Configure primeiro o HPA."
    exit 1
fi

echo "üéØ Monitorando aplica√ß√£o: php-apache"
echo "üìà HPA configurado para CPU: 50%"
echo "üîÑ Atualizando a cada 5 segundos..."
echo "‚èπÔ∏è  Pressione Ctrl+C para parar"
echo ""

# Fun√ß√£o para limpar tela
clear_screen() {
    clear
    echo "üìä Monitoramento de Escalabilidade - $(date '+%H:%M:%S')"
    echo "========================================================"
    echo ""
}

# Fun√ß√£o para mostrar status dos pods
show_pods_status() {
    echo "üîç Status dos Pods:"
    echo "-------------------"
    kubectl get pods -n aula-k8s -l app=php-apache -o custom-columns="NAME:.metadata.name,STATUS:.status.phase,READY:.status.conditions[?(@.type=='Ready')].status,CPU:.spec.containers[0].resources.requests.cpu,MEMORY:.spec.containers[0].resources.requests.memory" 2>/dev/null || kubectl get pods -n aula-k8s -l app=php-apache
    echo ""
}

# Fun√ß√£o para mostrar HPA
show_hpa_status() {
    echo "üìà Status do HPA:"
    echo "-----------------"
    kubectl get hpa -n aula-k8s -o custom-columns="NAME:.metadata.name,TARGETS:.status.currentMetrics[0].resource.currentAverageUtilization%,MINPODS:.spec.minReplicas,MAXPODS:.spec.maxReplicas,REPLICAS:.status.currentReplicas" 2>/dev/null || kubectl get hpa -n aula-k8s
    echo ""
}

# Fun√ß√£o para mostrar m√©tricas
show_metrics() {
    echo "üíª M√©tricas de Recursos:"
    echo "------------------------"
    kubectl top pods -n aula-k8s 2>/dev/null || echo "M√©tricas n√£o dispon√≠veis ainda"
    echo ""
}

# Fun√ß√£o para mostrar eventos
show_events() {
    echo "üìù Eventos Recentes:"
    echo "---------------------"
    kubectl get events -n aula-k8s --sort-by='.lastTimestamp' | tail -5
    echo ""
}

# Fun√ß√£o para mostrar estat√≠sticas
show_stats() {
    echo "üìä Estat√≠sticas:"
    echo "----------------"
    TOTAL_PODS=$(kubectl get pods -n aula-k8s -l app=php-apache | grep -c Running)
    TOTAL_CPU=$(kubectl get pods -n aula-k8s -l app=php-apache -o jsonpath='{.items[*].spec.containers[0].resources.requests.cpu}' | tr ' ' '\n' | sed 's/m//g' | awk '{sum+=$1} END {print sum}')
    TOTAL_MEMORY=$(kubectl get pods -n aula-k8s -l app=php-apache -o jsonpath='{.items[*].spec.containers[0].resources.requests.memory}' | tr ' ' '\n' | sed 's/Mi//g' | awk '{sum+=$1} END {print sum}')
    
    echo "   Total de Pods: $TOTAL_PODS"
    echo "   CPU Total: ${TOTAL_CPU}m"
    echo "   Mem√≥ria Total: ${TOTAL_MEMORY}Mi"
    echo ""
}

# Loop principal de monitoramento
while true; do
    clear_screen
    show_pods_status
    show_hpa_status
    show_metrics
    show_stats
    show_events
    
    echo "‚è≥ Pr√≥xima atualiza√ß√£o em 5 segundos..."
    echo "üí° Dica: Execute ./scripts/load-test.sh em outro terminal para gerar carga"
    
    sleep 5
done
